"use strict";(self.webpackChunkgraphdb_aws_deployment_guide=self.webpackChunkgraphdb_aws_deployment_guide||[]).push([[2279],{4137:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),d=p(a),c=r,h=d["".concat(i,".").concat(c)]||d[c]||m[c]||l;return a?n.createElement(h,s(s({ref:t},u),{},{components:a})):n.createElement(h,s({ref:t},u))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,s=new Array(l);s[0]=c;var o={};for(var i in t)hasOwnProperty.call(t,i)&&(o[i]=t[i]);o.originalType=e,o[d]="string"==typeof e?e:r,s[1]=o;for(var p=2;p<l;p++)s[p]=a[p];return n.createElement.apply(null,s)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},4296:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var n=a(7462),r=(a(7294),a(4137));const l={sidebar_position:1},s="GraphDB Deployment guide",o={unversionedId:"deployment-assets/DAS-001",id:"deployment-assets/DAS-001",title:"GraphDB Deployment guide",description:"System Requirements",source:"@site/docs/deployment-assets/DAS-001.md",sourceDirName:"deployment-assets",slug:"/deployment-assets/DAS-001",permalink:"/graphdb-aws-deployment-guide/docs/deployment-assets/DAS-001",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Deployment Assets",permalink:"/graphdb-aws-deployment-guide/docs/category/deployment-assets"},next:{title:"Testing and troubleshooting",permalink:"/graphdb-aws-deployment-guide/docs/deployment-assets/DAS-004"}},i={},p=[{value:"System Requirements",id:"system-requirements",level:2},{value:"Supported Platforms",id:"supported-platforms",level:3},{value:"Hardware Requirements",id:"hardware-requirements",level:2},{value:"Software Requirements",id:"software-requirements",level:2},{value:"Amazon Web Services",id:"amazon-web-services",level:2},{value:"Account and Permissions",id:"account-and-permissions",level:3},{value:"Required resources",id:"required-resources",level:3},{value:"Steps",id:"steps",level:3},{value:"Installing GraphDB on EC2",id:"installing-graphdb-on-ec2",level:2}],u={toc:p},d="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(d,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"graphdb-deployment-guide"},"GraphDB Deployment guide"),(0,r.kt)("h2",{id:"system-requirements"},"System Requirements"),(0,r.kt)("h3",{id:"supported-platforms"},"Supported Platforms"),(0,r.kt)("p",null,"GraphDB is supported on systems with x86_64 and ARM architectures on physical, virtual, or containerized platforms."),(0,r.kt)("h2",{id:"hardware-requirements"},"Hardware Requirements"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"CPU"),": Should be noted that the license limits the number of CPU cores (This affects inferencing and read requests)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Memory"),": Please refer to the ",(0,r.kt)("a",{parentName:"li",href:"https://graphdb.ontotext.com/documentation/10.2/requirements.html#hardware-sizing"},"hardware sizing documentation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Storage"),": A ",(0,r.kt)("inlineCode",{parentName:"li"},"gp3")," or ",(0,r.kt)("inlineCode",{parentName:"li"},"io")," volume is recommended, NFS file systems are not recommended.")),(0,r.kt)("h2",{id:"software-requirements"},"Software Requirements"),(0,r.kt)("p",null,"Java Development Kit 11-16"),(0,r.kt)("h2",{id:"amazon-web-services"},"Amazon Web Services"),(0,r.kt)("h3",{id:"account-and-permissions"},"Account and Permissions"),(0,r.kt)("p",null,"Before starting, you need access to an AWS account in which GraphDB will be deployed.\nFor security reasons, it is recommended that you create an ",(0,r.kt)("a",{parentName:"p",href:"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users.html"},"IAM user"),"\nfor the deployment and not use the root account."),(0,r.kt)("h3",{id:"required-resources"},"Required resources"),(0,r.kt)("p",null,"You need to be able to create the following resources:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Virtual Private Cloud (VPC) ",(0,r.kt)("em",{parentName:"li"},"(an existing VPC can be used as well)")),(0,r.kt)("li",{parentName:"ul"},"Private subnets"),(0,r.kt)("li",{parentName:"ul"},"Public subnets ",(0,r.kt)("em",{parentName:"li"},"(if GraphDB will be exposed to the public internet)")),(0,r.kt)("li",{parentName:"ul"},"Auto-scaling groups"),(0,r.kt)("li",{parentName:"ul"},"Security groups"),(0,r.kt)("li",{parentName:"ul"},"Elastic Cloud Compute (EC2) instances"),(0,r.kt)("li",{parentName:"ul"},"Elastic Block Storage (EBS) volumes")),(0,r.kt)("h3",{id:"steps"},"Steps"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Create VPC"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Enter name"),(0,r.kt)("li",{parentName:"ul"},"CIDR 10.0.0.0/16"),(0,r.kt)("li",{parentName:"ul"},"DNS hostnames and resolution should be enabled")),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Create a private subnets"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For cluster deployments, you\u2019ll need at least three subnets in different availability zones: 10.0.0.0/19, 10.0.32.0/19, 10.0.64.0/19")),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Create public subnets")," ",(0,r.kt)("em",{parentName:"li"},"(Optional - if GraphDB should be publicly accessible)")," ")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"For cluster deployments, you\u2019ll need at least three subnets in different availability zones: 10.0.128.0/20, 10.0.144.0/20, 10.0.160.0/20")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"Create an Auto Scaling group"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Set a name"),(0,r.kt)("li",{parentName:"ul"},"Click on Create a launch template",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Set a Launch template name"),(0,r.kt)("li",{parentName:"ul"},"Select Ubuntu as the AMI (TODO: we need to add our AMI when it\u2019s available)"))),(0,r.kt)("li",{parentName:"ul"},"For architecture select 64-bit (x86)"),(0,r.kt)("li",{parentName:"ul"},"Add a second EBS volume",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Size: 100"),(0,r.kt)("li",{parentName:"ul"},"Device name: /dev/sdf"),(0,r.kt)("li",{parentName:"ul"},"Type: gp3"),(0,r.kt)("li",{parentName:"ul"},"IOPS: 16000"))),(0,r.kt)("li",{parentName:"ul"},"Select the newly create Launch Template and click next"),(0,r.kt)("li",{parentName:"ul"},"Select your VPC, and the availability zones of your subnets")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"TODO")," finish this"),(0,r.kt)("h2",{id:"installing-graphdb-on-ec2"},"Installing GraphDB on EC2"),(0,r.kt)("p",null,"Before installing GraphDB, make sure the EC2 instance meets the System Requirements."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Install GraphDB from the standalone distribution archive")),(0,r.kt)("p",null,"GraphDB requires a Java Development Kit (JDK) to be installed. The recommended version is 11, but anything prior to version 17 should work as well."),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://www.ontotext.com/products/graphdb/download/"},"Register"),", download and unzip the GraphDB distribution in the EC2 instance."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ unzip graphdb-10.2.2-dist.zip\n")),(0,r.kt)("p",null,"Move it to ",(0,r.kt)("inlineCode",{parentName:"p"},"/opt")," and create a symlink to it:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ mv graphdb-10.2.2 /opt/\n$ ln -s /opt/graphdb-10.2.2 /opt/graphdb\n")),(0,r.kt)("p",null,"Create a user and group for GraphDB and give it permissions on the installation directory:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ groupadd graphdb\n$ useradd -g graphdb graphdb -s /bin/bash\n$ chown -R graphdb:graphdb /opt/graphdb-10.2.2\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Running as a console application:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"/opt/graphdb/bin/graphdb\n")),(0,r.kt)("p",null,"Or to run it in the background, use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"/opt/graphdb/bin/graphdb -b\n")),(0,r.kt)("p",null,"GraphDB should now be accessible on the public IP of the EC2 instance at port ",(0,r.kt)("inlineCode",{parentName:"p"},"7200"),".\n",(0,r.kt)("em",{parentName:"p"},"(If you don't have a public IP, you can create a VPN connection)")),(0,r.kt)("p",null,"To stop GraphDB, press ",(0,r.kt)("inlineCode",{parentName:"p"},"CTRL + C"),", if you have started it in the foreground, otherwise, you can execute the following command:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"/opt/graphdb/bin/graphdb stop\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Running as systemd service")),(0,r.kt)("p",null,"GraphDB can be configured to be managed by systemd and also to start automatically when the system starts."),(0,r.kt)("p",null,"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"/lib/systemd/system/graphdb.service")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},'[Unit]\nDescription="GraphDB Engine"\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nRestart=on-failure\nRestartSec=5s\nUser=graphdb\nGroup=graphdb\nExecStart="/opt/graphdb/bin/graphdb"\nTimeoutSec=120\nSuccessExitStatus=143\n\n[Install]\nWantedBy=multi-user.target\n')),(0,r.kt)("p",null,"Reload systemd, to pick the GraphDB unit file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ systemctl daemon-reload\n")),(0,r.kt)("p",null,"Enable the service to run at system start up:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ systemctl enable graphdb\n")),(0,r.kt)("p",null,"Start the GraphDB service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ systemctl start graphdb\n")),(0,r.kt)("p",null,"Check its status:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"$ systemctl status graphdb\n")))}m.isMDXComponent=!0}}]);