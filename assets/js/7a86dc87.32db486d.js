"use strict";(self.webpackChunkgraphdb_aws_deployment_guide=self.webpackChunkgraphdb_aws_deployment_guide||[]).push([[9034],{4137:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),c=s(n),m=a,y=c["".concat(p,".").concat(m)]||c[m]||u[m]||o;return n?r.createElement(y,l(l({ref:t},d),{},{components:n})):r.createElement(y,l({ref:t},d))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[c]="string"==typeof e?e:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7842:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>s});var r=n(7462),a=(n(7294),n(4137));const o={sidebar_position:2},l="Overview of a typical customer deployment",i={unversionedId:"introduction/INT-002",id:"introduction/INT-002",title:"Overview of a typical customer deployment",description:"TODO",source:"@site/docs/introduction/INT-002.md",sourceDirName:"introduction",slug:"/introduction/INT-002",permalink:"/graphdb-aws-deployment-guide/docs/introduction/INT-002",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Use cases",permalink:"/graphdb-aws-deployment-guide/docs/introduction/INT-001"},next:{title:"List of all deployment options",permalink:"/graphdb-aws-deployment-guide/docs/introduction/INT-003"}},p={},s=[],d={toc:s},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview-of-a-typical-customer-deployment"},"Overview of a typical customer deployment"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"TODO")),(0,a.kt)("p",null,"GraphDB is deployed on AWS in a cluster configuration, consisting of a leader and multiple followers spread across different availability zones.\nThis setup ensures high availability and easy configuration. The number of cluster nodes deployed depends on the chosen package.\nThe smallest deployment includes three distinct GraphDB nodes. "),(0,a.kt)("p",null,"For detailed information about the GraphDB cluster, please visit ",(0,a.kt)("a",{parentName:"p",href:"https://graphdb.ontotext.com/documentation/10.2/cluster-basics.html"},"https://graphdb.ontotext.com/documentation/10.2/cluster-basics.html"),"."),(0,a.kt)("p",null,"GraphDB AWS Components - ",(0,a.kt)("strong",{parentName:"p"},"ToDo")," are the components fixed at this point or they can be changed later on?"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Resource"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"GraphDB EC2"),(0,a.kt)("td",{parentName:"tr",align:null},"EC2 instance in which a GraphDB leader or follower node is started. The number of EC2 instances that are deployed depends on the size of the cluster, i.e. a 3-node cluster would use 3 EC2 instances.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"VPC Internet Gateway"),(0,a.kt)("td",{parentName:"tr",align:null},"Used to enable connections to the GraphDB workbench from the Internet.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"EBS Volumes"),(0,a.kt)("td",{parentName:"tr",align:null},"EBS volumes are used for data storage when operating the database")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Network Load Balancer"),(0,a.kt)("td",{parentName:"tr",align:null},"Distributes the load between all GraphDB nodes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"S3"),(0,a.kt)("td",{parentName:"tr",align:null},"The S3 bucket is used to store the regular data backups that are made")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Elastic Block Store"),(0,a.kt)("td",{parentName:"tr",align:null},"The GraphDB data is stored in an Elastic Block Store (EBS). So if a 3-node cluster is deployed 3 EBS volumes will be used.")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"NAT Gateway"),(0,a.kt)("td",{parentName:"tr",align:null})))))}u.isMDXComponent=!0}}]);